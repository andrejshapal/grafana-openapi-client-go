// Code generated by go-swagger; DO NOT EDIT.

package playlists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-openapi-client-go/models"
)

// GetPlaylistDashboardsReader is a Reader for the GetPlaylistDashboards structure.
type GetPlaylistDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlaylistDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPlaylistDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPlaylistDashboardsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPlaylistDashboardsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPlaylistDashboardsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPlaylistDashboardsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /playlists/{uid}/dashboards] getPlaylistDashboards", response, response.Code())
	}
}

// NewGetPlaylistDashboardsOK creates a GetPlaylistDashboardsOK with default headers values
func NewGetPlaylistDashboardsOK() *GetPlaylistDashboardsOK {
	return &GetPlaylistDashboardsOK{}
}

/*
GetPlaylistDashboardsOK describes a response with status code 200, with default header values.

(empty)
*/
type GetPlaylistDashboardsOK struct {
	Payload models.PlaylistDashboardsSlice
}

// IsSuccess returns true when this get playlist dashboards o k response has a 2xx status code
func (o *GetPlaylistDashboardsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get playlist dashboards o k response has a 3xx status code
func (o *GetPlaylistDashboardsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get playlist dashboards o k response has a 4xx status code
func (o *GetPlaylistDashboardsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get playlist dashboards o k response has a 5xx status code
func (o *GetPlaylistDashboardsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get playlist dashboards o k response a status code equal to that given
func (o *GetPlaylistDashboardsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get playlist dashboards o k response
func (o *GetPlaylistDashboardsOK) Code() int {
	return 200
}

func (o *GetPlaylistDashboardsOK) Error() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsOK  %+v", 200, o.Payload)
}

func (o *GetPlaylistDashboardsOK) String() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsOK  %+v", 200, o.Payload)
}

func (o *GetPlaylistDashboardsOK) GetPayload() models.PlaylistDashboardsSlice {
	return o.Payload
}

func (o *GetPlaylistDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlaylistDashboardsUnauthorized creates a GetPlaylistDashboardsUnauthorized with default headers values
func NewGetPlaylistDashboardsUnauthorized() *GetPlaylistDashboardsUnauthorized {
	return &GetPlaylistDashboardsUnauthorized{}
}

/*
GetPlaylistDashboardsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetPlaylistDashboardsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get playlist dashboards unauthorized response has a 2xx status code
func (o *GetPlaylistDashboardsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get playlist dashboards unauthorized response has a 3xx status code
func (o *GetPlaylistDashboardsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get playlist dashboards unauthorized response has a 4xx status code
func (o *GetPlaylistDashboardsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get playlist dashboards unauthorized response has a 5xx status code
func (o *GetPlaylistDashboardsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get playlist dashboards unauthorized response a status code equal to that given
func (o *GetPlaylistDashboardsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get playlist dashboards unauthorized response
func (o *GetPlaylistDashboardsUnauthorized) Code() int {
	return 401
}

func (o *GetPlaylistDashboardsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPlaylistDashboardsUnauthorized) String() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPlaylistDashboardsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetPlaylistDashboardsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlaylistDashboardsForbidden creates a GetPlaylistDashboardsForbidden with default headers values
func NewGetPlaylistDashboardsForbidden() *GetPlaylistDashboardsForbidden {
	return &GetPlaylistDashboardsForbidden{}
}

/*
GetPlaylistDashboardsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetPlaylistDashboardsForbidden struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get playlist dashboards forbidden response has a 2xx status code
func (o *GetPlaylistDashboardsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get playlist dashboards forbidden response has a 3xx status code
func (o *GetPlaylistDashboardsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get playlist dashboards forbidden response has a 4xx status code
func (o *GetPlaylistDashboardsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get playlist dashboards forbidden response has a 5xx status code
func (o *GetPlaylistDashboardsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get playlist dashboards forbidden response a status code equal to that given
func (o *GetPlaylistDashboardsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get playlist dashboards forbidden response
func (o *GetPlaylistDashboardsForbidden) Code() int {
	return 403
}

func (o *GetPlaylistDashboardsForbidden) Error() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsForbidden  %+v", 403, o.Payload)
}

func (o *GetPlaylistDashboardsForbidden) String() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsForbidden  %+v", 403, o.Payload)
}

func (o *GetPlaylistDashboardsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetPlaylistDashboardsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlaylistDashboardsNotFound creates a GetPlaylistDashboardsNotFound with default headers values
func NewGetPlaylistDashboardsNotFound() *GetPlaylistDashboardsNotFound {
	return &GetPlaylistDashboardsNotFound{}
}

/*
GetPlaylistDashboardsNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetPlaylistDashboardsNotFound struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get playlist dashboards not found response has a 2xx status code
func (o *GetPlaylistDashboardsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get playlist dashboards not found response has a 3xx status code
func (o *GetPlaylistDashboardsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get playlist dashboards not found response has a 4xx status code
func (o *GetPlaylistDashboardsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get playlist dashboards not found response has a 5xx status code
func (o *GetPlaylistDashboardsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get playlist dashboards not found response a status code equal to that given
func (o *GetPlaylistDashboardsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get playlist dashboards not found response
func (o *GetPlaylistDashboardsNotFound) Code() int {
	return 404
}

func (o *GetPlaylistDashboardsNotFound) Error() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsNotFound  %+v", 404, o.Payload)
}

func (o *GetPlaylistDashboardsNotFound) String() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsNotFound  %+v", 404, o.Payload)
}

func (o *GetPlaylistDashboardsNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetPlaylistDashboardsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlaylistDashboardsInternalServerError creates a GetPlaylistDashboardsInternalServerError with default headers values
func NewGetPlaylistDashboardsInternalServerError() *GetPlaylistDashboardsInternalServerError {
	return &GetPlaylistDashboardsInternalServerError{}
}

/*
GetPlaylistDashboardsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetPlaylistDashboardsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

// IsSuccess returns true when this get playlist dashboards internal server error response has a 2xx status code
func (o *GetPlaylistDashboardsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get playlist dashboards internal server error response has a 3xx status code
func (o *GetPlaylistDashboardsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get playlist dashboards internal server error response has a 4xx status code
func (o *GetPlaylistDashboardsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get playlist dashboards internal server error response has a 5xx status code
func (o *GetPlaylistDashboardsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get playlist dashboards internal server error response a status code equal to that given
func (o *GetPlaylistDashboardsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get playlist dashboards internal server error response
func (o *GetPlaylistDashboardsInternalServerError) Code() int {
	return 500
}

func (o *GetPlaylistDashboardsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlaylistDashboardsInternalServerError) String() string {
	return fmt.Sprintf("[GET /playlists/{uid}/dashboards][%d] getPlaylistDashboardsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetPlaylistDashboardsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetPlaylistDashboardsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
